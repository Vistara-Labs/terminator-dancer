[package]
name = "terminator-dancer"
version = "0.1.0"
edition = "2021"
authors = ["Terminator-Dancer Contributors"]
description = "High-performance Solana runtime foundation with Firedancer integration"
license = "Apache-2.0"
repository = "https://github.com/vistara-labs/terminator-dancer"
keywords = ["solana", "blockchain", "runtime", "firedancer", "bpf"]
categories = ["cryptography", "blockchain"]

# Build configuration
build = "build.rs"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# Core runtime
anyhow = "1.0"
thiserror = "1.0"
tracing = "0.1"

# Logging - will be handled in target-specific dependencies

# Configuration and serialization
toml = "0.8"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_with = "3.0"
serde_bytes = "0.11"

# Solana-compatible serialization
borsh = { version = "1.0", features = ["derive"] }
bincode = "1.3"

# Cryptography (WASM-compatible)
ed25519-dalek = { version = "2.1", features = ["rand_core"] }
rand_core = { version = "0.6", features = ["std"] }
rand = "0.8"
sha2 = { version = "0.10" }
blake3 = { version = "1.5" }
bs58 = "0.5"

# WASM-compatible randomness
getrandom = { version = "0.2", features = ["js"] }

# Utilities
clap = { version = "4.0", features = ["derive"], optional = true }
hex = "0.4"

# Network requests for mainnet data
reqwest = { version = "0.11", features = ["json"], optional = true }
base64 = { version = "0.22", optional = true }

# WASM-specific dependencies
wasm-bindgen = { version = "0.2", optional = true }
js-sys = { version = "0.3", optional = true }
web-sys = { version = "0.3", optional = true, features = [
  "console",
  "Window",
  "Document",
  "Element",
  "HtmlElement",
  "Storage",
  "Performance",
] }
gloo-timers = { version = "0.3", optional = true }

# Crypto fallbacks for WASM

# Async runtime will be handled in target-specific dependencies

# Benchmarking
criterion = { version = "0.5", optional = true }

# Test utilities
arbitrary = { version = "1.0", optional = true, features = ["derive"] }

# BPF Virtual Machine (Real Solana VM) - commented out due to dependency conflicts
# solana_rbpf = "0.8" # Ready for integration when BPF VM implementation is completed
# solana-program = "1.18"

[build-dependencies]
# Optional bindgen for Firedancer C integration
bindgen = { version = "0.69", optional = true }

[dev-dependencies]
criterion = "0.5"
arbitrary = { version = "1.0", features = ["derive"] }
tokio = { version = "1.0", features = ["full"] }
reqwest = { version = "0.11", features = ["json"] }
base64 = "0.22"

[features]
default = ["native"]

# Native features (excludes WASM-incompatible dependencies)
native = ["tokio", "clap", "tracing-subscriber", "futures"]

# WASM features
wasm = [
  "wasm-bindgen", 
  "js-sys", 
  "web-sys", 
  "gloo-timers",
]

# Firedancer integration (requires Firedancer to be built)
firedancer = []

# Generate C bindings automatically
bindgen = ["dep:bindgen"]

# Fuzzing support
fuzzing = ["arbitrary"]

# Benchmarking
bench = ["criterion"]

# Performance optimizations
simd = []

# Mainnet integration (for fetching real transaction data)
mainnet = ["reqwest", "base64"]

[profile.release]
# Optimize for performance
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.bench]
opt-level = 3
debug = true

[[example]]
name = "demo"
required-features = []

[[example]]
name = "crypto_demo"
required-features = []

[[example]]
name = "benchmark"
required-features = []

[[example]]
name = "integration_demo"
required-features = []

[[example]]
name = "real_mainnet_demo"
required-features = ["mainnet"]

[[example]]
name = "fetch_real_mainnet_tx"
required-features = ["mainnet"]

[[example]]
name = "paste_any_tx"
required-features = ["mainnet"]

[[example]]
name = "demo_real_tx"
required-features = ["mainnet"]

[[example]]
name = "working_real_demo"
required-features = []

[[bench]]
name = "transaction_processing"
harness = false
required-features = ["bench"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

# Target-specific dependencies
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "1.0", features = ["full"], optional = true }
futures = { version = "0.3", optional = true }
tracing-subscriber = { version = "0.3", features = ["env-filter"], optional = true }
